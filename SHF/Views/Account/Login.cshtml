@using SHF.Models
@model LoginViewModel

@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_LoginRegister.cshtml";
}
<link href="~/plugins/iCheck/all.css" rel="stylesheet" />

<div class="login-box">
    <div class="login-logo">
        <a href="#"><b>SHIVA B F</b>&nbsp;Solutions</a>
    </div>
    <!-- /.login-logo -->
    <div class="login-box-body">
        <p class="login-box-msg">Sign in to start your session</p>
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
        {
            @Html.ValidationSummary(SHF.Helper.busConstant.Misc.FALSE, "", new { @class = "text-danger" })

            @Html.AntiForgeryToken()

            <div class="form-group has-feedback">
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "User Name", Autocomplete = "false" })
                <span class="fa fa-user form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>
            <div class="form-group has-feedback">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password", Autocomplete = "false" })
                <span class="fa fa-key form-control-feedback"></span>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                <div class="col-xs-8">
                    <div class="checkbox icheck">
                        <label>
                            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "icheck" })
                            @Html.LabelFor(m => m.RememberMe)
                        </label>
                    </div>
                </div>
                <!-- /.col -->
                <div class="col-xs-4">
                    <button type="submit" class="btn btn-sm btn-primary btn-block btn-flat">Sign In</button>
                </div>
                <!-- /.col -->
            </div>
        }
        <div class="social-auth-links text-center">
            <p>- OR -</p>
            @*<a href="#" class="btn btn-block btn-social btn-facebook btn-flat">
                    <i class="fa fa-facebook"></i> Sign in using
                    Facebook
                </a>
                <a href="#" class="btn btn-block btn-social btn-google btn-flat">
                    <i class="fa fa-google-plus"></i> Sign in using
                    Google+
                </a>*@
        </div>
        <!-- /.social-auth-links -->

        <a href="@Url.Action("ForgotPassword","Account")">I forgot my password</a><br>
        @*<a href="register.html" class="text-center">Register a new membership</a>*@

    </div>
    <!-- /.login-box-body -->
</div>

@section scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="~/plugins/iCheck/icheck.js"></script>*@
    <script type="text/javascript">
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });

        function GetAllMenu() {
            $.ajax({
                type: 'GET',
                url: '/Get/Navigation/GetAllMenuAsync',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: false,
                processData: true,
                cache: true,
                beforeSend: function (xhr) {
                    $.blockUI({ message: '<h1><img src="../../../Content/Images/loader.gif" /> Loading...</h1>' });
                },
                success: function (result, status, xhr) {
                    if (result.Entity) {
                        debugger
                        if (typeof (Storage) !== "undefined") {
                            localStorage.setItem("NAVIGATION_MENU", JSON.stringify(result.Entity));
                        } else {
                            alert('Sorry! No Web Storage support..');
                        }
                    }
                    console.clear();
                },
                error: function (xhr, status, error) {
                    alert("Whooaaa! Something went wrong...");
                },
                complete: function (xhr, status) {
                    $.unblockUI();
                    redirectToContent();
                },
            });
        }

        function GetAllMessgaes() {
            $.ajax({
                type: 'GET',
                url: '/Get/Messgae/GetAllMessagesAsync',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: false,
                processData: true,
                cache: true,
                beforeSend: function (xhr) {
                    $.blockUI({ message: '<h1><img src="../../../Content/Images/loader.gif" /> Loading...</h1>' });
                },
                success: function (result, status, xhr) {
                    if (result.Entity) {
                        if (typeof (Storage) !== "undefined") {
                            localStorage.setItem("NOTIFICATION_MESSAGES", JSON.stringify(result.Entity));
                        } else {
                            alert('Sorry! No Web Storage support..');
                        }
                    }
                    else {
                        swal("Error", "Whooaaa! Something went wrong..", "error");
                    }
                    console.clear();
                },
                error: function (xhr, status, error) {
                    alert("Whooaaa! Something went wrong..");
                },
                complete: function (xhr, status) {
                    $.unblockUI();
                },
            });
        }

        function GetAllCodeValues() {
            $.ajax({
                type: 'GET',
                url: '/Get/CodeValue/GetAllCodeValuesAsync',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: false,
                processData: true,
                cache: true,
                beforeSend: function (xhr) {
                    $.blockUI({ message: '<h1><img src="../../../Content/Images/loader.gif" /> Loading...</h1>' });
                },
                success: function (result, status, xhr) {
                    if (result.Entity) {
                        if (typeof (Storage) !== "undefined") {
                            localStorage.setItem("CODE_VALUES", JSON.stringify(result.Entity));
                        } else {
                            alert('Sorry! No Web Storage support..');
                        }
                    }
                    else {
                        swal("Error", "Whooaaa! Something went wrong..", "error");
                    }
                    console.clear();
                },
                error: function (xhr, status, error) {
                    alert("Whooaaa! Something went wrong..");
                },
                complete: function (xhr, status) {
                    $.unblockUI();
                },
            });
        }

        $(document).ready(function () {
            if (window.localStorage) {
                if (localStorage.getItem("NOTIFICATION_MESSAGES") === null) {
                    GetAllMessgaes();
                }
                if (localStorage.getItem("CODE_VALUES") === null) {
                    GetAllCodeValues();
                }
                if (localStorage.getItem("NAVIGATION_MENU") === null) {
                    GetAllMenu();
                }
            }
        });


    </script>
}